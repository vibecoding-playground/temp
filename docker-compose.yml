# MeetingMind - Docker Compose Configuration
version: '3.8'

services:
  # Main application
  meetingmind:
    build: .
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql://meetingmind:password@postgres:5432/meetingmind
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - postgres
      - redis
    networks:
      - meetingmind-network
    restart: unless-stopped
    labels:
      - "com.meetingmind.service=api"

  # PostgreSQL Database (for production)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=meetingmind
      - POSTGRES_USER=meetingmind
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - meetingmind-network
    restart: unless-stopped
    labels:
      - "com.meetingmind.service=database"

  # Redis (for caching and session storage)
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass redispassword
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - meetingmind-network
    restart: unless-stopped
    labels:
      - "com.meetingmind.service=cache"

  # Nginx (reverse proxy and load balancer)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/ssl/certs
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - meetingmind
    networks:
      - meetingmind-network
    restart: unless-stopped
    labels:
      - "com.meetingmind.service=proxy"

  # Prometheus (monitoring)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - meetingmind-network
    restart: unless-stopped
    labels:
      - "com.meetingmind.service=monitoring"

  # Grafana (visualization)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=meetingmind123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - meetingmind-network
    restart: unless-stopped
    labels:
      - "com.meetingmind.service=visualization"

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  meetingmind-network:
    driver: bridge
    labels:
      - "com.meetingmind.network=main"